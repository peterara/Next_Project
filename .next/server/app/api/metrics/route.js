"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/metrics/route";
exports.ids = ["app/api/metrics/route"];
exports.modules = {

/***/ "better-sqlite3":
/*!*********************************!*\
  !*** external "better-sqlite3" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("better-sqlite3");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "child_process":
/*!********************************!*\
  !*** external "child_process" ***!
  \********************************/
/***/ ((module) => {

module.exports = require("child_process");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("net");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("os");

/***/ }),

/***/ "perf_hooks":
/*!*****************************!*\
  !*** external "perf_hooks" ***!
  \*****************************/
/***/ ((module) => {

module.exports = require("perf_hooks");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("tls");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("util");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fmetrics%2Froute&page=%2Fapi%2Fmetrics%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fmetrics%2Froute.ts&appDir=C%3A%5CUsers%5CNeeraj%20Kumar%5COneDrive%5CDesktop%5CNext_Project%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CNeeraj%20Kumar%5COneDrive%5CDesktop%5CNext_Project&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fmetrics%2Froute&page=%2Fapi%2Fmetrics%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fmetrics%2Froute.ts&appDir=C%3A%5CUsers%5CNeeraj%20Kumar%5COneDrive%5CDesktop%5CNext_Project%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CNeeraj%20Kumar%5COneDrive%5CDesktop%5CNext_Project&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerHooks: () => (/* binding */ headerHooks),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage),\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_Neeraj_Kumar_OneDrive_Desktop_Next_Project_app_api_metrics_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/metrics/route.ts */ \"(rsc)/./app/api/metrics/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/metrics/route\",\n        pathname: \"/api/metrics\",\n        filename: \"route\",\n        bundlePath: \"app/api/metrics/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\Neeraj Kumar\\\\OneDrive\\\\Desktop\\\\Next_Project\\\\app\\\\api\\\\metrics\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_Neeraj_Kumar_OneDrive_Desktop_Next_Project_app_api_metrics_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/metrics/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZtZXRyaWNzJTJGcm91dGUmcGFnZT0lMkZhcGklMkZtZXRyaWNzJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGbWV0cmljcyUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNOZWVyYWolMjBLdW1hciU1Q09uZURyaXZlJTVDRGVza3RvcCU1Q05leHRfUHJvamVjdCU1Q2FwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9QyUzQSU1Q1VzZXJzJTVDTmVlcmFqJTIwS3VtYXIlNUNPbmVEcml2ZSU1Q0Rlc2t0b3AlNUNOZXh0X1Byb2plY3QmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ2M7QUFDcUM7QUFDbEg7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSx1R0FBdUc7QUFDL0c7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUM2Sjs7QUFFN0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zeXN0ZW0tcGVyZm9ybWFuY2UtbW9uaXRvci1kYXNoYm9hcmQvP2U0ZjAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiQzpcXFxcVXNlcnNcXFxcTmVlcmFqIEt1bWFyXFxcXE9uZURyaXZlXFxcXERlc2t0b3BcXFxcTmV4dF9Qcm9qZWN0XFxcXGFwcFxcXFxhcGlcXFxcbWV0cmljc1xcXFxyb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvbWV0cmljcy9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL21ldHJpY3NcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL21ldHJpY3Mvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCJDOlxcXFxVc2Vyc1xcXFxOZWVyYWogS3VtYXJcXFxcT25lRHJpdmVcXFxcRGVza3RvcFxcXFxOZXh0X1Byb2plY3RcXFxcYXBwXFxcXGFwaVxcXFxtZXRyaWNzXFxcXHJvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIGhlYWRlckhvb2tzLCBzdGF0aWNHZW5lcmF0aW9uQmFpbG91dCB9ID0gcm91dGVNb2R1bGU7XG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL21ldHJpY3Mvcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgaGVhZGVySG9va3MsIHN0YXRpY0dlbmVyYXRpb25CYWlsb3V0LCBvcmlnaW5hbFBhdGhuYW1lLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fmetrics%2Froute&page=%2Fapi%2Fmetrics%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fmetrics%2Froute.ts&appDir=C%3A%5CUsers%5CNeeraj%20Kumar%5COneDrive%5CDesktop%5CNext_Project%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CNeeraj%20Kumar%5COneDrive%5CDesktop%5CNext_Project&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/metrics/route.ts":
/*!**********************************!*\
  !*** ./app/api/metrics/route.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(rsc)/./node_modules/next/dist/server/web/exports/next-response.js\");\n/* harmony import */ var _lib_system_metrics__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/system-metrics */ \"(rsc)/./lib/system-metrics.ts\");\n/* harmony import */ var _lib_db__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/db */ \"(rsc)/./lib/db/index.ts\");\n/* harmony import */ var _lib_db_schema__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/db/schema */ \"(rsc)/./lib/db/schema.ts\");\n/* harmony import */ var drizzle_orm__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! drizzle-orm */ \"(rsc)/./node_modules/drizzle-orm/sql/expressions/conditions.js\");\n\n\n\n\n\nasync function GET(request) {\n    try {\n        // Get current system metrics with specifications\n        const metrics = await (0,_lib_system_metrics__WEBPACK_IMPORTED_MODULE_1__.getAllMetricsWithSpecs)();\n        // Store basic metrics in database (optional - for historical tracking)\n        try {\n            await _lib_db__WEBPACK_IMPORTED_MODULE_2__.db.insert(_lib_db_schema__WEBPACK_IMPORTED_MODULE_3__.metricsHistory).values({\n                cpuUsage: metrics.cpuUsage,\n                memoryUsage: metrics.memoryUsage,\n                diskUsage: metrics.diskUsage,\n                timestamp: metrics.timestamp\n            });\n        } catch (dbError) {\n            // Log but don't fail the request if DB storage fails\n            console.warn(\"Failed to store metrics in database:\", dbError);\n        }\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            success: true,\n            data: metrics,\n            timestamp: new Date().toISOString()\n        });\n    } catch (error) {\n        console.error(\"Error fetching system metrics:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            success: false,\n            error: \"Failed to fetch system metrics\",\n            timestamp: new Date().toISOString()\n        }, {\n            status: 500\n        });\n    }\n}\n// Optional: Get historical metrics\nasync function POST(request) {\n    try {\n        const { userId, limit = 100 } = await request.json();\n        let query = _lib_db__WEBPACK_IMPORTED_MODULE_2__.db.select().from(_lib_db_schema__WEBPACK_IMPORTED_MODULE_3__.metricsHistory).orderBy(_lib_db_schema__WEBPACK_IMPORTED_MODULE_3__.metricsHistory.timestamp).limit(limit);\n        if (userId) {\n            query = query.where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_4__.eq)(_lib_db_schema__WEBPACK_IMPORTED_MODULE_3__.metricsHistory.userId, userId));\n        }\n        const history = await query;\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            success: true,\n            data: history,\n            timestamp: new Date().toISOString()\n        });\n    } catch (error) {\n        console.error(\"Error fetching metrics history:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            success: false,\n            error: \"Failed to fetch metrics history\",\n            timestamp: new Date().toISOString()\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXBpL21ldHJpY3Mvcm91dGUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUF3RDtBQUNNO0FBQ2hDO0FBQ21CO0FBQ2hCO0FBRTFCLGVBQWVLLElBQUlDLE9BQW9CO0lBQzVDLElBQUk7UUFDRixpREFBaUQ7UUFDakQsTUFBTUMsVUFBVSxNQUFNTiwyRUFBc0JBO1FBRTVDLHVFQUF1RTtRQUN2RSxJQUFJO1lBQ0YsTUFBTUMsdUNBQUVBLENBQUNNLE1BQU0sQ0FBQ0wsMERBQWNBLEVBQUVNLE1BQU0sQ0FBQztnQkFDckNDLFVBQVVILFFBQVFHLFFBQVE7Z0JBQzFCQyxhQUFhSixRQUFRSSxXQUFXO2dCQUNoQ0MsV0FBV0wsUUFBUUssU0FBUztnQkFDNUJDLFdBQVdOLFFBQVFNLFNBQVM7WUFDOUI7UUFDRixFQUFFLE9BQU9DLFNBQVM7WUFDaEIscURBQXFEO1lBQ3JEQyxRQUFRQyxJQUFJLENBQUMsd0NBQXdDRjtRQUN2RDtRQUVBLE9BQU9kLGtGQUFZQSxDQUFDaUIsSUFBSSxDQUFDO1lBQ3ZCQyxTQUFTO1lBQ1RDLE1BQU1aO1lBQ05NLFdBQVcsSUFBSU8sT0FBT0MsV0FBVztRQUNuQztJQUNGLEVBQUUsT0FBT0MsT0FBTztRQUNkUCxRQUFRTyxLQUFLLENBQUMsa0NBQWtDQTtRQUNoRCxPQUFPdEIsa0ZBQVlBLENBQUNpQixJQUFJLENBQ3RCO1lBQ0VDLFNBQVM7WUFDVEksT0FBTztZQUNQVCxXQUFXLElBQUlPLE9BQU9DLFdBQVc7UUFDbkMsR0FDQTtZQUFFRSxRQUFRO1FBQUk7SUFFbEI7QUFDRjtBQUVBLG1DQUFtQztBQUM1QixlQUFlQyxLQUFLbEIsT0FBb0I7SUFDN0MsSUFBSTtRQUNGLE1BQU0sRUFBRW1CLE1BQU0sRUFBRUMsUUFBUSxHQUFHLEVBQUUsR0FBRyxNQUFNcEIsUUFBUVcsSUFBSTtRQUVsRCxJQUFJVSxRQUFRekIsdUNBQUVBLENBQ1gwQixNQUFNLEdBQ05DLElBQUksQ0FBQzFCLDBEQUFjQSxFQUNuQjJCLE9BQU8sQ0FBQzNCLDBEQUFjQSxDQUFDVSxTQUFTLEVBQ2hDYSxLQUFLLENBQUNBO1FBRVQsSUFBSUQsUUFBUTtZQUNWRSxRQUFRQSxNQUFNSSxLQUFLLENBQUMzQiwrQ0FBRUEsQ0FBQ0QsMERBQWNBLENBQUNzQixNQUFNLEVBQUVBO1FBQ2hEO1FBRUEsTUFBTU8sVUFBVSxNQUFNTDtRQUV0QixPQUFPM0Isa0ZBQVlBLENBQUNpQixJQUFJLENBQUM7WUFDdkJDLFNBQVM7WUFDVEMsTUFBTWE7WUFDTm5CLFdBQVcsSUFBSU8sT0FBT0MsV0FBVztRQUNuQztJQUNGLEVBQUUsT0FBT0MsT0FBTztRQUNkUCxRQUFRTyxLQUFLLENBQUMsbUNBQW1DQTtRQUNqRCxPQUFPdEIsa0ZBQVlBLENBQUNpQixJQUFJLENBQ3RCO1lBQ0VDLFNBQVM7WUFDVEksT0FBTztZQUNQVCxXQUFXLElBQUlPLE9BQU9DLFdBQVc7UUFDbkMsR0FDQTtZQUFFRSxRQUFRO1FBQUk7SUFFbEI7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL3N5c3RlbS1wZXJmb3JtYW5jZS1tb25pdG9yLWRhc2hib2FyZC8uL2FwcC9hcGkvbWV0cmljcy9yb3V0ZS50cz9kMTRmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRSZXF1ZXN0LCBOZXh0UmVzcG9uc2UgfSBmcm9tIFwibmV4dC9zZXJ2ZXJcIjtcclxuaW1wb3J0IHsgZ2V0QWxsTWV0cmljc1dpdGhTcGVjcyB9IGZyb20gXCJAL2xpYi9zeXN0ZW0tbWV0cmljc1wiO1xyXG5pbXBvcnQgeyBkYiB9IGZyb20gXCJAL2xpYi9kYlwiO1xyXG5pbXBvcnQgeyBtZXRyaWNzSGlzdG9yeSB9IGZyb20gXCJAL2xpYi9kYi9zY2hlbWFcIjtcclxuaW1wb3J0IHsgZXEgfSBmcm9tIFwiZHJpenpsZS1vcm1cIjtcclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBHRVQocmVxdWVzdDogTmV4dFJlcXVlc3QpIHtcclxuICB0cnkge1xyXG4gICAgLy8gR2V0IGN1cnJlbnQgc3lzdGVtIG1ldHJpY3Mgd2l0aCBzcGVjaWZpY2F0aW9uc1xyXG4gICAgY29uc3QgbWV0cmljcyA9IGF3YWl0IGdldEFsbE1ldHJpY3NXaXRoU3BlY3MoKTtcclxuXHJcbiAgICAvLyBTdG9yZSBiYXNpYyBtZXRyaWNzIGluIGRhdGFiYXNlIChvcHRpb25hbCAtIGZvciBoaXN0b3JpY2FsIHRyYWNraW5nKVxyXG4gICAgdHJ5IHtcclxuICAgICAgYXdhaXQgZGIuaW5zZXJ0KG1ldHJpY3NIaXN0b3J5KS52YWx1ZXMoe1xyXG4gICAgICAgIGNwdVVzYWdlOiBtZXRyaWNzLmNwdVVzYWdlLFxyXG4gICAgICAgIG1lbW9yeVVzYWdlOiBtZXRyaWNzLm1lbW9yeVVzYWdlLFxyXG4gICAgICAgIGRpc2tVc2FnZTogbWV0cmljcy5kaXNrVXNhZ2UsXHJcbiAgICAgICAgdGltZXN0YW1wOiBtZXRyaWNzLnRpbWVzdGFtcCxcclxuICAgICAgfSk7XHJcbiAgICB9IGNhdGNoIChkYkVycm9yKSB7XHJcbiAgICAgIC8vIExvZyBidXQgZG9uJ3QgZmFpbCB0aGUgcmVxdWVzdCBpZiBEQiBzdG9yYWdlIGZhaWxzXHJcbiAgICAgIGNvbnNvbGUud2FybihcIkZhaWxlZCB0byBzdG9yZSBtZXRyaWNzIGluIGRhdGFiYXNlOlwiLCBkYkVycm9yKTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xyXG4gICAgICBzdWNjZXNzOiB0cnVlLFxyXG4gICAgICBkYXRhOiBtZXRyaWNzLFxyXG4gICAgICB0aW1lc3RhbXA6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcclxuICAgIH0pO1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgZmV0Y2hpbmcgc3lzdGVtIG1ldHJpY3M6XCIsIGVycm9yKTtcclxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcclxuICAgICAge1xyXG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxyXG4gICAgICAgIGVycm9yOiBcIkZhaWxlZCB0byBmZXRjaCBzeXN0ZW0gbWV0cmljc1wiLFxyXG4gICAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxyXG4gICAgICB9LFxyXG4gICAgICB7IHN0YXR1czogNTAwIH1cclxuICAgICk7XHJcbiAgfVxyXG59XHJcblxyXG4vLyBPcHRpb25hbDogR2V0IGhpc3RvcmljYWwgbWV0cmljc1xyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gUE9TVChyZXF1ZXN0OiBOZXh0UmVxdWVzdCkge1xyXG4gIHRyeSB7XHJcbiAgICBjb25zdCB7IHVzZXJJZCwgbGltaXQgPSAxMDAgfSA9IGF3YWl0IHJlcXVlc3QuanNvbigpO1xyXG5cclxuICAgIGxldCBxdWVyeSA9IGRiXHJcbiAgICAgIC5zZWxlY3QoKVxyXG4gICAgICAuZnJvbShtZXRyaWNzSGlzdG9yeSlcclxuICAgICAgLm9yZGVyQnkobWV0cmljc0hpc3RvcnkudGltZXN0YW1wKVxyXG4gICAgICAubGltaXQobGltaXQpO1xyXG5cclxuICAgIGlmICh1c2VySWQpIHtcclxuICAgICAgcXVlcnkgPSBxdWVyeS53aGVyZShlcShtZXRyaWNzSGlzdG9yeS51c2VySWQsIHVzZXJJZCkpO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IGhpc3RvcnkgPSBhd2FpdCBxdWVyeTtcclxuXHJcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xyXG4gICAgICBzdWNjZXNzOiB0cnVlLFxyXG4gICAgICBkYXRhOiBoaXN0b3J5LFxyXG4gICAgICB0aW1lc3RhbXA6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcclxuICAgIH0pO1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgZmV0Y2hpbmcgbWV0cmljcyBoaXN0b3J5OlwiLCBlcnJvcik7XHJcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXHJcbiAgICAgIHtcclxuICAgICAgICBzdWNjZXNzOiBmYWxzZSxcclxuICAgICAgICBlcnJvcjogXCJGYWlsZWQgdG8gZmV0Y2ggbWV0cmljcyBoaXN0b3J5XCIsXHJcbiAgICAgICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXHJcbiAgICAgIH0sXHJcbiAgICAgIHsgc3RhdHVzOiA1MDAgfVxyXG4gICAgKTtcclxuICB9XHJcbn1cclxuIl0sIm5hbWVzIjpbIk5leHRSZXNwb25zZSIsImdldEFsbE1ldHJpY3NXaXRoU3BlY3MiLCJkYiIsIm1ldHJpY3NIaXN0b3J5IiwiZXEiLCJHRVQiLCJyZXF1ZXN0IiwibWV0cmljcyIsImluc2VydCIsInZhbHVlcyIsImNwdVVzYWdlIiwibWVtb3J5VXNhZ2UiLCJkaXNrVXNhZ2UiLCJ0aW1lc3RhbXAiLCJkYkVycm9yIiwiY29uc29sZSIsIndhcm4iLCJqc29uIiwic3VjY2VzcyIsImRhdGEiLCJEYXRlIiwidG9JU09TdHJpbmciLCJlcnJvciIsInN0YXR1cyIsIlBPU1QiLCJ1c2VySWQiLCJsaW1pdCIsInF1ZXJ5Iiwic2VsZWN0IiwiZnJvbSIsIm9yZGVyQnkiLCJ3aGVyZSIsImhpc3RvcnkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./app/api/metrics/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/db/index.ts":
/*!*************************!*\
  !*** ./lib/db/index.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   db: () => (/* binding */ db),\n/* harmony export */   schema: () => (/* reexport module object */ _schema__WEBPACK_IMPORTED_MODULE_2__)\n/* harmony export */ });\n/* harmony import */ var drizzle_orm_better_sqlite3__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! drizzle-orm/better-sqlite3 */ \"(rsc)/./node_modules/drizzle-orm/better-sqlite3/driver.js\");\n/* harmony import */ var drizzle_orm_postgres_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! drizzle-orm/postgres-js */ \"(rsc)/./node_modules/drizzle-orm/postgres-js/driver.js\");\n/* harmony import */ var postgres__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! postgres */ \"(rsc)/./node_modules/postgres/src/index.js\");\n/* harmony import */ var better_sqlite3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! better-sqlite3 */ \"better-sqlite3\");\n/* harmony import */ var better_sqlite3__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(better_sqlite3__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _schema__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./schema */ \"(rsc)/./lib/db/schema.ts\");\n\n\n\n\n\n// Database connection\nconst connectionString = process.env.DATABASE_URL || \"file:./dev.db\";\nlet db;\n// Check if using SQLite or PostgreSQL\nif (connectionString.startsWith(\"file:\")) {\n    // SQLite connection\n    const sqlite = new (better_sqlite3__WEBPACK_IMPORTED_MODULE_1___default())(connectionString.replace(\"file:\", \"\"));\n    db = (0,drizzle_orm_better_sqlite3__WEBPACK_IMPORTED_MODULE_3__.drizzle)(sqlite, {\n        schema: _schema__WEBPACK_IMPORTED_MODULE_2__\n    });\n    // Close connection on app shutdown\n    process.on(\"SIGINT\", ()=>{\n        sqlite.close();\n        process.exit(0);\n    });\n    process.on(\"SIGTERM\", ()=>{\n        sqlite.close();\n        process.exit(0);\n    });\n} else {\n    // PostgreSQL connection\n    const client = (0,postgres__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(connectionString);\n    db = (0,drizzle_orm_postgres_js__WEBPACK_IMPORTED_MODULE_4__.drizzle)(client, {\n        schema: _schema__WEBPACK_IMPORTED_MODULE_2__\n    });\n    // Close connection on app shutdown\n    process.on(\"SIGINT\", ()=>{\n        client.end();\n        process.exit(0);\n    });\n    process.on(\"SIGTERM\", ()=>{\n        client.end();\n        process.exit(0);\n    });\n}\n// Export drizzle instance\n\n// Export schema for migrations\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvZGIvaW5kZXgudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBb0Q7QUFDZ0I7QUFDckM7QUFDTTtBQUNIO0FBRWxDLHNCQUFzQjtBQUN0QixNQUFNSyxtQkFBbUJDLFFBQVFDLEdBQUcsQ0FBQ0MsWUFBWSxJQUFJO0FBRXJELElBQUlDO0FBRUosc0NBQXNDO0FBQ3RDLElBQUlKLGlCQUFpQkssVUFBVSxDQUFDLFVBQVU7SUFDeEMsb0JBQW9CO0lBQ3BCLE1BQU1DLFNBQVMsSUFBSVIsdURBQVFBLENBQUNFLGlCQUFpQk8sT0FBTyxDQUFDLFNBQVM7SUFDOURILEtBQUtULG1FQUFPQSxDQUFDVyxRQUFRO1FBQUVQLE1BQU1BLHNDQUFBQTtJQUFDO0lBRTlCLG1DQUFtQztJQUNuQ0UsUUFBUU8sRUFBRSxDQUFDLFVBQVU7UUFDbkJGLE9BQU9HLEtBQUs7UUFDWlIsUUFBUVMsSUFBSSxDQUFDO0lBQ2Y7SUFFQVQsUUFBUU8sRUFBRSxDQUFDLFdBQVc7UUFDcEJGLE9BQU9HLEtBQUs7UUFDWlIsUUFBUVMsSUFBSSxDQUFDO0lBQ2Y7QUFDRixPQUFPO0lBQ0wsd0JBQXdCO0lBQ3hCLE1BQU1DLFNBQVNkLG9EQUFRQSxDQUFDRztJQUN4QkksS0FBS1IsZ0VBQWVBLENBQUNlLFFBQVE7UUFBRVosTUFBTUEsc0NBQUFBO0lBQUM7SUFFdEMsbUNBQW1DO0lBQ25DRSxRQUFRTyxFQUFFLENBQUMsVUFBVTtRQUNuQkcsT0FBT0MsR0FBRztRQUNWWCxRQUFRUyxJQUFJLENBQUM7SUFDZjtJQUVBVCxRQUFRTyxFQUFFLENBQUMsV0FBVztRQUNwQkcsT0FBT0MsR0FBRztRQUNWWCxRQUFRUyxJQUFJLENBQUM7SUFDZjtBQUNGO0FBRUEsMEJBQTBCO0FBQ2I7QUFFYiwrQkFBK0I7QUFDZCIsInNvdXJjZXMiOlsid2VicGFjazovL3N5c3RlbS1wZXJmb3JtYW5jZS1tb25pdG9yLWRhc2hib2FyZC8uL2xpYi9kYi9pbmRleC50cz82Zjk0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGRyaXp6bGUgfSBmcm9tICdkcml6emxlLW9ybS9iZXR0ZXItc3FsaXRlMydcclxuaW1wb3J0IHsgZHJpenpsZSBhcyBkcml6emxlUG9zdGdyZXMgfSBmcm9tICdkcml6emxlLW9ybS9wb3N0Z3Jlcy1qcydcclxuaW1wb3J0IHBvc3RncmVzIGZyb20gJ3Bvc3RncmVzJ1xyXG5pbXBvcnQgRGF0YWJhc2UgZnJvbSAnYmV0dGVyLXNxbGl0ZTMnXHJcbmltcG9ydCAqIGFzIHNjaGVtYSBmcm9tICcuL3NjaGVtYSdcclxuXHJcbi8vIERhdGFiYXNlIGNvbm5lY3Rpb25cclxuY29uc3QgY29ubmVjdGlvblN0cmluZyA9IHByb2Nlc3MuZW52LkRBVEFCQVNFX1VSTCB8fCAnZmlsZTouL2Rldi5kYidcclxuXHJcbmxldCBkYjogYW55XHJcblxyXG4vLyBDaGVjayBpZiB1c2luZyBTUUxpdGUgb3IgUG9zdGdyZVNRTFxyXG5pZiAoY29ubmVjdGlvblN0cmluZy5zdGFydHNXaXRoKCdmaWxlOicpKSB7XHJcbiAgLy8gU1FMaXRlIGNvbm5lY3Rpb25cclxuICBjb25zdCBzcWxpdGUgPSBuZXcgRGF0YWJhc2UoY29ubmVjdGlvblN0cmluZy5yZXBsYWNlKCdmaWxlOicsICcnKSlcclxuICBkYiA9IGRyaXp6bGUoc3FsaXRlLCB7IHNjaGVtYSB9KVxyXG4gIFxyXG4gIC8vIENsb3NlIGNvbm5lY3Rpb24gb24gYXBwIHNodXRkb3duXHJcbiAgcHJvY2Vzcy5vbignU0lHSU5UJywgKCkgPT4ge1xyXG4gICAgc3FsaXRlLmNsb3NlKClcclxuICAgIHByb2Nlc3MuZXhpdCgwKVxyXG4gIH0pXHJcbiAgXHJcbiAgcHJvY2Vzcy5vbignU0lHVEVSTScsICgpID0+IHtcclxuICAgIHNxbGl0ZS5jbG9zZSgpXHJcbiAgICBwcm9jZXNzLmV4aXQoMClcclxuICB9KVxyXG59IGVsc2Uge1xyXG4gIC8vIFBvc3RncmVTUUwgY29ubmVjdGlvblxyXG4gIGNvbnN0IGNsaWVudCA9IHBvc3RncmVzKGNvbm5lY3Rpb25TdHJpbmcpXHJcbiAgZGIgPSBkcml6emxlUG9zdGdyZXMoY2xpZW50LCB7IHNjaGVtYSB9KVxyXG4gIFxyXG4gIC8vIENsb3NlIGNvbm5lY3Rpb24gb24gYXBwIHNodXRkb3duXHJcbiAgcHJvY2Vzcy5vbignU0lHSU5UJywgKCkgPT4ge1xyXG4gICAgY2xpZW50LmVuZCgpXHJcbiAgICBwcm9jZXNzLmV4aXQoMClcclxuICB9KVxyXG4gIFxyXG4gIHByb2Nlc3Mub24oJ1NJR1RFUk0nLCAoKSA9PiB7XHJcbiAgICBjbGllbnQuZW5kKClcclxuICAgIHByb2Nlc3MuZXhpdCgwKVxyXG4gIH0pXHJcbn1cclxuXHJcbi8vIEV4cG9ydCBkcml6emxlIGluc3RhbmNlXHJcbmV4cG9ydCB7IGRiIH1cclxuXHJcbi8vIEV4cG9ydCBzY2hlbWEgZm9yIG1pZ3JhdGlvbnNcclxuZXhwb3J0IHsgc2NoZW1hIH1cclxuIl0sIm5hbWVzIjpbImRyaXp6bGUiLCJkcml6emxlUG9zdGdyZXMiLCJwb3N0Z3JlcyIsIkRhdGFiYXNlIiwic2NoZW1hIiwiY29ubmVjdGlvblN0cmluZyIsInByb2Nlc3MiLCJlbnYiLCJEQVRBQkFTRV9VUkwiLCJkYiIsInN0YXJ0c1dpdGgiLCJzcWxpdGUiLCJyZXBsYWNlIiwib24iLCJjbG9zZSIsImV4aXQiLCJjbGllbnQiLCJlbmQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./lib/db/index.ts\n");

/***/ }),

/***/ "(rsc)/./lib/db/schema.ts":
/*!**************************!*\
  !*** ./lib/db/schema.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   metricsHistory: () => (/* binding */ metricsHistory),\n/* harmony export */   metricsHistoryRelations: () => (/* binding */ metricsHistoryRelations),\n/* harmony export */   userSettings: () => (/* binding */ userSettings),\n/* harmony export */   userSettingsRelations: () => (/* binding */ userSettingsRelations),\n/* harmony export */   users: () => (/* binding */ users),\n/* harmony export */   usersRelations: () => (/* binding */ usersRelations)\n/* harmony export */ });\n/* harmony import */ var drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! drizzle-orm/sqlite-core */ \"(rsc)/./node_modules/drizzle-orm/sqlite-core/table.js\");\n/* harmony import */ var drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! drizzle-orm/sqlite-core */ \"(rsc)/./node_modules/drizzle-orm/sqlite-core/columns/integer.js\");\n/* harmony import */ var drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! drizzle-orm/sqlite-core */ \"(rsc)/./node_modules/drizzle-orm/sqlite-core/columns/text.js\");\n/* harmony import */ var drizzle_orm__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! drizzle-orm */ \"(rsc)/./node_modules/drizzle-orm/relations.js\");\n\n\nconst users = (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_0__.sqliteTable)(\"users\", {\n    id: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_1__.integer)(\"id\").primaryKey({\n        autoIncrement: true\n    }),\n    email: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_2__.text)(\"email\").notNull().unique(),\n    name: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_2__.text)(\"name\"),\n    password: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_2__.text)(\"password\"),\n    createdAt: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_1__.integer)(\"created_at\", {\n        mode: \"timestamp\"\n    }).notNull().$defaultFn(()=>new Date()),\n    updatedAt: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_1__.integer)(\"updated_at\", {\n        mode: \"timestamp\"\n    }).notNull().$defaultFn(()=>new Date())\n});\nconst userSettings = (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_0__.sqliteTable)(\"user_settings\", {\n    id: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_1__.integer)(\"id\").primaryKey({\n        autoIncrement: true\n    }),\n    userId: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_1__.integer)(\"user_id\").references(()=>users.id, {\n        onDelete: \"cascade\"\n    }).notNull(),\n    theme: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_2__.text)(\"theme\").default(\"light\").notNull(),\n    pollingInterval: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_1__.integer)(\"polling_interval\").default(2000).notNull(),\n    createdAt: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_1__.integer)(\"created_at\", {\n        mode: \"timestamp\"\n    }).notNull().$defaultFn(()=>new Date()),\n    updatedAt: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_1__.integer)(\"updated_at\", {\n        mode: \"timestamp\"\n    }).notNull().$defaultFn(()=>new Date())\n});\nconst metricsHistory = (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_0__.sqliteTable)(\"metrics_history\", {\n    id: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_1__.integer)(\"id\").primaryKey({\n        autoIncrement: true\n    }),\n    userId: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_1__.integer)(\"user_id\").references(()=>users.id, {\n        onDelete: \"cascade\"\n    }),\n    cpuUsage: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_1__.integer)(\"cpu_usage\").notNull(),\n    memoryUsage: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_1__.integer)(\"memory_usage\").notNull(),\n    diskUsage: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_1__.integer)(\"disk_usage\").notNull(),\n    timestamp: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_1__.integer)(\"timestamp\", {\n        mode: \"timestamp\"\n    }).notNull().$defaultFn(()=>new Date())\n});\n// Relations\nconst usersRelations = (0,drizzle_orm__WEBPACK_IMPORTED_MODULE_3__.relations)(users, ({ many })=>({\n        settings: many(userSettings),\n        metricsHistory: many(metricsHistory)\n    }));\nconst userSettingsRelations = (0,drizzle_orm__WEBPACK_IMPORTED_MODULE_3__.relations)(userSettings, ({ one })=>({\n        user: one(users, {\n            fields: [\n                userSettings.userId\n            ],\n            references: [\n                users.id\n            ]\n        })\n    }));\nconst metricsHistoryRelations = (0,drizzle_orm__WEBPACK_IMPORTED_MODULE_3__.relations)(metricsHistory, ({ one })=>({\n        user: one(users, {\n            fields: [\n                metricsHistory.userId\n            ],\n            references: [\n                users.id\n            ]\n        })\n    }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvZGIvc2NoZW1hLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBMkU7QUFDbkM7QUFFakMsTUFBTUksUUFBUUosb0VBQVdBLENBQUMsU0FBUztJQUN4Q0ssSUFBSUosZ0VBQU9BLENBQUMsTUFBTUssVUFBVSxDQUFDO1FBQUVDLGVBQWU7SUFBSztJQUNuREMsT0FBT04sNkRBQUlBLENBQUMsU0FBU08sT0FBTyxHQUFHQyxNQUFNO0lBQ3JDQyxNQUFNVCw2REFBSUEsQ0FBQztJQUNYVSxVQUFVViw2REFBSUEsQ0FBQztJQUNmVyxXQUFXWixnRUFBT0EsQ0FBQyxjQUFjO1FBQUVhLE1BQU07SUFBWSxHQUNsREwsT0FBTyxHQUNQTSxVQUFVLENBQUMsSUFBTSxJQUFJQztJQUN4QkMsV0FBV2hCLGdFQUFPQSxDQUFDLGNBQWM7UUFBRWEsTUFBTTtJQUFZLEdBQ2xETCxPQUFPLEdBQ1BNLFVBQVUsQ0FBQyxJQUFNLElBQUlDO0FBQzFCLEdBQUc7QUFFSSxNQUFNRSxlQUFlbEIsb0VBQVdBLENBQUMsaUJBQWlCO0lBQ3ZESyxJQUFJSixnRUFBT0EsQ0FBQyxNQUFNSyxVQUFVLENBQUM7UUFBRUMsZUFBZTtJQUFLO0lBQ25EWSxRQUFRbEIsZ0VBQU9BLENBQUMsV0FDYm1CLFVBQVUsQ0FBQyxJQUFNaEIsTUFBTUMsRUFBRSxFQUFFO1FBQUVnQixVQUFVO0lBQVUsR0FDakRaLE9BQU87SUFDVmEsT0FBT3BCLDZEQUFJQSxDQUFDLFNBQVNxQixPQUFPLENBQUMsU0FBU2QsT0FBTztJQUM3Q2UsaUJBQWlCdkIsZ0VBQU9BLENBQUMsb0JBQW9Cc0IsT0FBTyxDQUFDLE1BQU1kLE9BQU87SUFDbEVJLFdBQVdaLGdFQUFPQSxDQUFDLGNBQWM7UUFBRWEsTUFBTTtJQUFZLEdBQ2xETCxPQUFPLEdBQ1BNLFVBQVUsQ0FBQyxJQUFNLElBQUlDO0lBQ3hCQyxXQUFXaEIsZ0VBQU9BLENBQUMsY0FBYztRQUFFYSxNQUFNO0lBQVksR0FDbERMLE9BQU8sR0FDUE0sVUFBVSxDQUFDLElBQU0sSUFBSUM7QUFDMUIsR0FBRztBQUVJLE1BQU1TLGlCQUFpQnpCLG9FQUFXQSxDQUFDLG1CQUFtQjtJQUMzREssSUFBSUosZ0VBQU9BLENBQUMsTUFBTUssVUFBVSxDQUFDO1FBQUVDLGVBQWU7SUFBSztJQUNuRFksUUFBUWxCLGdFQUFPQSxDQUFDLFdBQVdtQixVQUFVLENBQUMsSUFBTWhCLE1BQU1DLEVBQUUsRUFBRTtRQUNwRGdCLFVBQVU7SUFDWjtJQUNBSyxVQUFVekIsZ0VBQU9BLENBQUMsYUFBYVEsT0FBTztJQUN0Q2tCLGFBQWExQixnRUFBT0EsQ0FBQyxnQkFBZ0JRLE9BQU87SUFDNUNtQixXQUFXM0IsZ0VBQU9BLENBQUMsY0FBY1EsT0FBTztJQUN4Q29CLFdBQVc1QixnRUFBT0EsQ0FBQyxhQUFhO1FBQUVhLE1BQU07SUFBWSxHQUNqREwsT0FBTyxHQUNQTSxVQUFVLENBQUMsSUFBTSxJQUFJQztBQUMxQixHQUFHO0FBRUgsWUFBWTtBQUNMLE1BQU1jLGlCQUFpQjNCLHNEQUFTQSxDQUFDQyxPQUFPLENBQUMsRUFBRTJCLElBQUksRUFBRSxHQUFNO1FBQzVEQyxVQUFVRCxLQUFLYjtRQUNmTyxnQkFBZ0JNLEtBQUtOO0lBQ3ZCLElBQUk7QUFFRyxNQUFNUSx3QkFBd0I5QixzREFBU0EsQ0FBQ2UsY0FBYyxDQUFDLEVBQUVnQixHQUFHLEVBQUUsR0FBTTtRQUN6RUMsTUFBTUQsSUFBSTlCLE9BQU87WUFDZmdDLFFBQVE7Z0JBQUNsQixhQUFhQyxNQUFNO2FBQUM7WUFDN0JDLFlBQVk7Z0JBQUNoQixNQUFNQyxFQUFFO2FBQUM7UUFDeEI7SUFDRixJQUFJO0FBRUcsTUFBTWdDLDBCQUEwQmxDLHNEQUFTQSxDQUFDc0IsZ0JBQWdCLENBQUMsRUFBRVMsR0FBRyxFQUFFLEdBQU07UUFDN0VDLE1BQU1ELElBQUk5QixPQUFPO1lBQ2ZnQyxRQUFRO2dCQUFDWCxlQUFlTixNQUFNO2FBQUM7WUFDL0JDLFlBQVk7Z0JBQUNoQixNQUFNQyxFQUFFO2FBQUM7UUFDeEI7SUFDRixJQUFJIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3lzdGVtLXBlcmZvcm1hbmNlLW1vbml0b3ItZGFzaGJvYXJkLy4vbGliL2RiL3NjaGVtYS50cz8yZjZiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHNxbGl0ZVRhYmxlLCBpbnRlZ2VyLCB0ZXh0LCByZWFsIH0gZnJvbSBcImRyaXp6bGUtb3JtL3NxbGl0ZS1jb3JlXCI7XHJcbmltcG9ydCB7IHJlbGF0aW9ucyB9IGZyb20gXCJkcml6emxlLW9ybVwiO1xyXG5cclxuZXhwb3J0IGNvbnN0IHVzZXJzID0gc3FsaXRlVGFibGUoXCJ1c2Vyc1wiLCB7XHJcbiAgaWQ6IGludGVnZXIoXCJpZFwiKS5wcmltYXJ5S2V5KHsgYXV0b0luY3JlbWVudDogdHJ1ZSB9KSxcclxuICBlbWFpbDogdGV4dChcImVtYWlsXCIpLm5vdE51bGwoKS51bmlxdWUoKSxcclxuICBuYW1lOiB0ZXh0KFwibmFtZVwiKSxcclxuICBwYXNzd29yZDogdGV4dChcInBhc3N3b3JkXCIpLFxyXG4gIGNyZWF0ZWRBdDogaW50ZWdlcihcImNyZWF0ZWRfYXRcIiwgeyBtb2RlOiBcInRpbWVzdGFtcFwiIH0pXHJcbiAgICAubm90TnVsbCgpXHJcbiAgICAuJGRlZmF1bHRGbigoKSA9PiBuZXcgRGF0ZSgpKSxcclxuICB1cGRhdGVkQXQ6IGludGVnZXIoXCJ1cGRhdGVkX2F0XCIsIHsgbW9kZTogXCJ0aW1lc3RhbXBcIiB9KVxyXG4gICAgLm5vdE51bGwoKVxyXG4gICAgLiRkZWZhdWx0Rm4oKCkgPT4gbmV3IERhdGUoKSksXHJcbn0pO1xyXG5cclxuZXhwb3J0IGNvbnN0IHVzZXJTZXR0aW5ncyA9IHNxbGl0ZVRhYmxlKFwidXNlcl9zZXR0aW5nc1wiLCB7XHJcbiAgaWQ6IGludGVnZXIoXCJpZFwiKS5wcmltYXJ5S2V5KHsgYXV0b0luY3JlbWVudDogdHJ1ZSB9KSxcclxuICB1c2VySWQ6IGludGVnZXIoXCJ1c2VyX2lkXCIpXHJcbiAgICAucmVmZXJlbmNlcygoKSA9PiB1c2Vycy5pZCwgeyBvbkRlbGV0ZTogXCJjYXNjYWRlXCIgfSlcclxuICAgIC5ub3ROdWxsKCksXHJcbiAgdGhlbWU6IHRleHQoXCJ0aGVtZVwiKS5kZWZhdWx0KFwibGlnaHRcIikubm90TnVsbCgpLCAvLyAnbGlnaHQnIHwgJ2RhcmsnXHJcbiAgcG9sbGluZ0ludGVydmFsOiBpbnRlZ2VyKFwicG9sbGluZ19pbnRlcnZhbFwiKS5kZWZhdWx0KDIwMDApLm5vdE51bGwoKSwgLy8gaW4gbWlsbGlzZWNvbmRzXHJcbiAgY3JlYXRlZEF0OiBpbnRlZ2VyKFwiY3JlYXRlZF9hdFwiLCB7IG1vZGU6IFwidGltZXN0YW1wXCIgfSlcclxuICAgIC5ub3ROdWxsKClcclxuICAgIC4kZGVmYXVsdEZuKCgpID0+IG5ldyBEYXRlKCkpLFxyXG4gIHVwZGF0ZWRBdDogaW50ZWdlcihcInVwZGF0ZWRfYXRcIiwgeyBtb2RlOiBcInRpbWVzdGFtcFwiIH0pXHJcbiAgICAubm90TnVsbCgpXHJcbiAgICAuJGRlZmF1bHRGbigoKSA9PiBuZXcgRGF0ZSgpKSxcclxufSk7XHJcblxyXG5leHBvcnQgY29uc3QgbWV0cmljc0hpc3RvcnkgPSBzcWxpdGVUYWJsZShcIm1ldHJpY3NfaGlzdG9yeVwiLCB7XHJcbiAgaWQ6IGludGVnZXIoXCJpZFwiKS5wcmltYXJ5S2V5KHsgYXV0b0luY3JlbWVudDogdHJ1ZSB9KSxcclxuICB1c2VySWQ6IGludGVnZXIoXCJ1c2VyX2lkXCIpLnJlZmVyZW5jZXMoKCkgPT4gdXNlcnMuaWQsIHtcclxuICAgIG9uRGVsZXRlOiBcImNhc2NhZGVcIixcclxuICB9KSxcclxuICBjcHVVc2FnZTogaW50ZWdlcihcImNwdV91c2FnZVwiKS5ub3ROdWxsKCksIC8vIHBlcmNlbnRhZ2VcclxuICBtZW1vcnlVc2FnZTogaW50ZWdlcihcIm1lbW9yeV91c2FnZVwiKS5ub3ROdWxsKCksIC8vIHBlcmNlbnRhZ2VcclxuICBkaXNrVXNhZ2U6IGludGVnZXIoXCJkaXNrX3VzYWdlXCIpLm5vdE51bGwoKSwgLy8gcGVyY2VudGFnZVxyXG4gIHRpbWVzdGFtcDogaW50ZWdlcihcInRpbWVzdGFtcFwiLCB7IG1vZGU6IFwidGltZXN0YW1wXCIgfSlcclxuICAgIC5ub3ROdWxsKClcclxuICAgIC4kZGVmYXVsdEZuKCgpID0+IG5ldyBEYXRlKCkpLFxyXG59KTtcclxuXHJcbi8vIFJlbGF0aW9uc1xyXG5leHBvcnQgY29uc3QgdXNlcnNSZWxhdGlvbnMgPSByZWxhdGlvbnModXNlcnMsICh7IG1hbnkgfSkgPT4gKHtcclxuICBzZXR0aW5nczogbWFueSh1c2VyU2V0dGluZ3MpLFxyXG4gIG1ldHJpY3NIaXN0b3J5OiBtYW55KG1ldHJpY3NIaXN0b3J5KSxcclxufSkpO1xyXG5cclxuZXhwb3J0IGNvbnN0IHVzZXJTZXR0aW5nc1JlbGF0aW9ucyA9IHJlbGF0aW9ucyh1c2VyU2V0dGluZ3MsICh7IG9uZSB9KSA9PiAoe1xyXG4gIHVzZXI6IG9uZSh1c2Vycywge1xyXG4gICAgZmllbGRzOiBbdXNlclNldHRpbmdzLnVzZXJJZF0sXHJcbiAgICByZWZlcmVuY2VzOiBbdXNlcnMuaWRdLFxyXG4gIH0pLFxyXG59KSk7XHJcblxyXG5leHBvcnQgY29uc3QgbWV0cmljc0hpc3RvcnlSZWxhdGlvbnMgPSByZWxhdGlvbnMobWV0cmljc0hpc3RvcnksICh7IG9uZSB9KSA9PiAoe1xyXG4gIHVzZXI6IG9uZSh1c2Vycywge1xyXG4gICAgZmllbGRzOiBbbWV0cmljc0hpc3RvcnkudXNlcklkXSxcclxuICAgIHJlZmVyZW5jZXM6IFt1c2Vycy5pZF0sXHJcbiAgfSksXHJcbn0pKTtcclxuXHJcbmV4cG9ydCB0eXBlIFVzZXIgPSB0eXBlb2YgdXNlcnMuJGluZmVyU2VsZWN0O1xyXG5leHBvcnQgdHlwZSBOZXdVc2VyID0gdHlwZW9mIHVzZXJzLiRpbmZlckluc2VydDtcclxuZXhwb3J0IHR5cGUgVXNlclNldHRpbmdzID0gdHlwZW9mIHVzZXJTZXR0aW5ncy4kaW5mZXJTZWxlY3Q7XHJcbmV4cG9ydCB0eXBlIE5ld1VzZXJTZXR0aW5ncyA9IHR5cGVvZiB1c2VyU2V0dGluZ3MuJGluZmVySW5zZXJ0O1xyXG5leHBvcnQgdHlwZSBNZXRyaWNzSGlzdG9yeSA9IHR5cGVvZiBtZXRyaWNzSGlzdG9yeS4kaW5mZXJTZWxlY3Q7XHJcbmV4cG9ydCB0eXBlIE5ld01ldHJpY3NIaXN0b3J5ID0gdHlwZW9mIG1ldHJpY3NIaXN0b3J5LiRpbmZlckluc2VydDtcclxuIl0sIm5hbWVzIjpbInNxbGl0ZVRhYmxlIiwiaW50ZWdlciIsInRleHQiLCJyZWxhdGlvbnMiLCJ1c2VycyIsImlkIiwicHJpbWFyeUtleSIsImF1dG9JbmNyZW1lbnQiLCJlbWFpbCIsIm5vdE51bGwiLCJ1bmlxdWUiLCJuYW1lIiwicGFzc3dvcmQiLCJjcmVhdGVkQXQiLCJtb2RlIiwiJGRlZmF1bHRGbiIsIkRhdGUiLCJ1cGRhdGVkQXQiLCJ1c2VyU2V0dGluZ3MiLCJ1c2VySWQiLCJyZWZlcmVuY2VzIiwib25EZWxldGUiLCJ0aGVtZSIsImRlZmF1bHQiLCJwb2xsaW5nSW50ZXJ2YWwiLCJtZXRyaWNzSGlzdG9yeSIsImNwdVVzYWdlIiwibWVtb3J5VXNhZ2UiLCJkaXNrVXNhZ2UiLCJ0aW1lc3RhbXAiLCJ1c2Vyc1JlbGF0aW9ucyIsIm1hbnkiLCJzZXR0aW5ncyIsInVzZXJTZXR0aW5nc1JlbGF0aW9ucyIsIm9uZSIsInVzZXIiLCJmaWVsZHMiLCJtZXRyaWNzSGlzdG9yeVJlbGF0aW9ucyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./lib/db/schema.ts\n");

/***/ }),

/***/ "(rsc)/./lib/system-metrics.ts":
/*!*******************************!*\
  !*** ./lib/system-metrics.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formatBytes: () => (/* binding */ formatBytes),\n/* harmony export */   getAllMetrics: () => (/* binding */ getAllMetrics),\n/* harmony export */   getAllMetricsWithSpecs: () => (/* binding */ getAllMetricsWithSpecs),\n/* harmony export */   getCpuUsage: () => (/* binding */ getCpuUsage),\n/* harmony export */   getDiskInfo: () => (/* binding */ getDiskInfo),\n/* harmony export */   getMemoryInfo: () => (/* binding */ getMemoryInfo),\n/* harmony export */   getSystemSpecs: () => (/* binding */ getSystemSpecs)\n/* harmony export */ });\n/* harmony import */ var os__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! os */ \"os\");\n/* harmony import */ var os__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(os__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! util */ \"util\");\n/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(util__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var child_process__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! child_process */ \"child_process\");\n/* harmony import */ var child_process__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(child_process__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\nconst execAsync = (0,util__WEBPACK_IMPORTED_MODULE_1__.promisify)(child_process__WEBPACK_IMPORTED_MODULE_2__.exec);\n// Get CPU usage percentage - improved for Windows\nasync function getCpuUsage() {\n    try {\n        if (process.platform === \"win32\") {\n            // Use PowerShell to get more accurate CPU usage\n            const { stdout } = await execAsync(\"powershell \\\"Get-Counter '\\\\Processor(_Total)\\\\% Processor Time' | Select-Object -ExpandProperty CounterSamples | Select-Object -ExpandProperty CookedValue\\\"\");\n            const cpuUsage = parseFloat(stdout.trim());\n            return Math.round(cpuUsage);\n        }\n        // For Unix-like systems, calculate from /proc/loadavg\n        const cpus = os__WEBPACK_IMPORTED_MODULE_0___default().cpus().length;\n        const loadAvg = os__WEBPACK_IMPORTED_MODULE_0___default().loadavg()[0] // 1 minute load average\n        ;\n        const cpuUsage = Math.min(loadAvg / cpus * 100, 100);\n        return Math.round(cpuUsage);\n    } catch (error) {\n        console.error(\"Error getting CPU usage:\", error);\n        // Fallback to wmic if PowerShell fails\n        try {\n            const { stdout } = await execAsync(\"wmic cpu get loadpercentage /value\");\n            const match = stdout.match(/LoadPercentage=(\\d+)/);\n            return match ? parseInt(match[1]) : 0;\n        } catch (fallbackError) {\n            console.error(\"Fallback CPU usage method failed:\", fallbackError);\n            return 0;\n        }\n    }\n}\n// Get memory usage information - improved for Windows\nasync function getMemoryInfo() {\n    try {\n        if (process.platform === \"win32\") {\n            // Use PowerShell to get more accurate memory info\n            const { stdout } = await execAsync(\"powershell \\\"Get-Counter '\\\\Memory\\\\Available MBytes' | Select-Object -ExpandProperty CounterSamples | Select-Object -ExpandProperty CookedValue\\\"\");\n            const availableMB = parseFloat(stdout.trim());\n            // Get total physical memory\n            const { stdout: totalMemOutput } = await execAsync(\"wmic computersystem get TotalPhysicalMemory /value\");\n            const totalMemMatch = totalMemOutput.match(/TotalPhysicalMemory=(\\d+)/);\n            const totalBytes = totalMemMatch ? parseInt(totalMemMatch[1]) : 0;\n            const totalMB = totalBytes / (1024 * 1024);\n            const usedMB = totalMB - availableMB;\n            const usage = totalMB > 0 ? Math.round(usedMB / totalMB * 100) : 0;\n            return {\n                total: totalBytes,\n                free: availableMB * 1024 * 1024,\n                used: usedMB * 1024 * 1024,\n                usage\n            };\n        }\n        // Fallback to Node.js os module for other platforms\n        const total = os__WEBPACK_IMPORTED_MODULE_0___default().totalmem();\n        const free = os__WEBPACK_IMPORTED_MODULE_0___default().freemem();\n        const used = total - free;\n        const usage = Math.round(used / total * 100);\n        return {\n            total,\n            free,\n            used,\n            usage\n        };\n    } catch (error) {\n        console.error(\"Error getting memory info:\", error);\n        // Final fallback to Node.js os module\n        const total = os__WEBPACK_IMPORTED_MODULE_0___default().totalmem();\n        const free = os__WEBPACK_IMPORTED_MODULE_0___default().freemem();\n        const used = total - free;\n        const usage = Math.round(used / total * 100);\n        return {\n            total,\n            free,\n            used,\n            usage\n        };\n    }\n}\n// Get disk usage information - improved for Windows\nasync function getDiskInfo() {\n    try {\n        if (process.platform === \"win32\") {\n            // Use PowerShell to get more accurate disk info\n            const { stdout } = await execAsync('powershell \"Get-WmiObject -Class Win32_LogicalDisk | Where-Object {$_.DriveType -eq 3} | Select-Object Size,FreeSpace | ForEach-Object {$_.Size; $_.FreeSpace}\"');\n            const lines = stdout.trim().split(\"\\n\");\n            let total = 0;\n            let free = 0;\n            for(let i = 0; i < lines.length; i += 2){\n                if (lines[i] && lines[i + 1]) {\n                    total += parseInt(lines[i]) || 0;\n                    free += parseInt(lines[i + 1]) || 0;\n                }\n            }\n            const used = total - free;\n            const usage = total > 0 ? Math.round(used / total * 100) : 0;\n            return {\n                total,\n                free,\n                used,\n                usage\n            };\n        } else {\n            // For Unix-like systems, use df command\n            const { stdout } = await execAsync(\"df -k / | tail -1\");\n            const parts = stdout.trim().split(/\\s+/);\n            const total = parseInt(parts[1]) * 1024 // Convert KB to bytes\n            ;\n            const used = parseInt(parts[2]) * 1024;\n            const free = parseInt(parts[3]) * 1024;\n            const usage = Math.round(used / total * 100);\n            return {\n                total,\n                free,\n                used,\n                usage\n            };\n        }\n    } catch (error) {\n        console.error(\"Error getting disk usage:\", error);\n        // Fallback to wmic if PowerShell fails\n        try {\n            const { stdout } = await execAsync(\"wmic logicaldisk get size,freespace /value\");\n            const lines = stdout.trim().split(\"\\n\");\n            let total = 0;\n            let free = 0;\n            for (const line of lines){\n                if (line.includes(\"Size=\")) {\n                    total += parseInt(line.split(\"=\")[1]) || 0;\n                } else if (line.includes(\"FreeSpace=\")) {\n                    free += parseInt(line.split(\"=\")[1]) || 0;\n                }\n            }\n            const used = total - free;\n            const usage = total > 0 ? Math.round(used / total * 100) : 0;\n            return {\n                total,\n                free,\n                used,\n                usage\n            };\n        } catch (fallbackError) {\n            console.error(\"Fallback disk usage method failed:\", fallbackError);\n            return {\n                total: 0,\n                free: 0,\n                used: 0,\n                usage: 0\n            };\n        }\n    }\n}\n// Get all system metrics\nasync function getAllMetrics() {\n    const [cpuUsage, diskInfo, memoryInfo] = await Promise.all([\n        getCpuUsage(),\n        getDiskInfo(),\n        getMemoryInfo()\n    ]);\n    return {\n        cpuUsage,\n        memoryUsage: memoryInfo.usage,\n        diskUsage: diskInfo.usage,\n        timestamp: new Date()\n    };\n}\n// Get system specifications\nasync function getSystemSpecs() {\n    try {\n        if (process.platform === \"win32\") {\n            // Get total RAM\n            const { stdout: ramOutput } = await execAsync(\"wmic computersystem get TotalPhysicalMemory /value\");\n            const ramMatch = ramOutput.match(/TotalPhysicalMemory=(\\d+)/);\n            const totalRAM = ramMatch ? parseInt(ramMatch[1]) : 0;\n            // Get total disk space\n            const { stdout: diskOutput } = await execAsync(\"wmic logicaldisk get size /value\");\n            const diskLines = diskOutput.trim().split(\"\\n\");\n            let totalDisk = 0;\n            for (const line of diskLines){\n                if (line.includes(\"Size=\")) {\n                    totalDisk += parseInt(line.split(\"=\")[1]) || 0;\n                }\n            }\n            return {\n                totalRAM,\n                totalDisk\n            };\n        }\n        // For Unix-like systems\n        const totalRAM = os__WEBPACK_IMPORTED_MODULE_0___default().totalmem();\n        const { stdout } = await execAsync(\"df -k / | tail -1\");\n        const parts = stdout.trim().split(/\\s+/);\n        const totalDisk = parseInt(parts[1]) * 1024 // Convert KB to bytes\n        ;\n        return {\n            totalRAM,\n            totalDisk\n        };\n    } catch (error) {\n        console.error(\"Error getting system specs:\", error);\n        return {\n            totalRAM: 0,\n            totalDisk: 0\n        };\n    }\n}\n// Get all system metrics with specs\nasync function getAllMetricsWithSpecs() {\n    const [metrics, specs] = await Promise.all([\n        getAllMetrics(),\n        getSystemSpecs()\n    ]);\n    const usedRAM = metrics.memoryUsage / 100 * specs.totalRAM;\n    const usedDisk = metrics.diskUsage / 100 * specs.totalDisk;\n    return {\n        ...metrics,\n        totalRAM: specs.totalRAM,\n        totalDisk: specs.totalDisk,\n        usedRAM,\n        usedDisk\n    };\n}\n// Format bytes to human readable format\nfunction formatBytes(bytes) {\n    if (bytes === 0) return \"0 Bytes\";\n    const k = 1024;\n    const sizes = [\n        \"Bytes\",\n        \"KB\",\n        \"MB\",\n        \"GB\",\n        \"TB\"\n    ];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + \" \" + sizes[i];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/system-metrics.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/drizzle-orm","vendor-chunks/postgres"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fmetrics%2Froute&page=%2Fapi%2Fmetrics%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fmetrics%2Froute.ts&appDir=C%3A%5CUsers%5CNeeraj%20Kumar%5COneDrive%5CDesktop%5CNext_Project%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CNeeraj%20Kumar%5COneDrive%5CDesktop%5CNext_Project&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();